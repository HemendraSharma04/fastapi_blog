name: Sync
on:
  push:
    branches:
      - master

jobs:
  # migrations_linter_job:
  #       runs-on: ubuntu-latest
  #       name: Alert for checking breaking migrations
  #       steps:
  #           - uses: actions/checkout@v3
  #             with:
  #                 fetch-depth: 0

  #           - name: Get changed files
  #             id: changed-files
  #             uses: tj-actions/changed-files@v31.0.0

  #           - name: setup python
  #             uses: actions/setup-python@v4.2.0
  #             with:
  #                 python-version: 3.10.8

  #           - name: Run migrations linter
  #             run: |
  #                 python migrations_linter.py ${{ steps.changed-files.outputs.all_changed_files }}

  sync-branches:
    # needs: migrations_linter_job
    runs-on: ubuntu-latest
    name: Syncing branches
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Opening pull request
        id: pull
        uses: tretuna/sync-branches@1.4.0
        with:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          CONTENT_COMPARISON: true
          FROM_BRANCH: "master"
          TO_BRANCH: "develop"

      - name: test uppercase
        id: string
        uses: ASzc/change-string-case-action@v5
        env:
          GITHUB_USER: ${{ github.event.commits[0].author.username }}
          SLACK_USER: "${{env.GITHUB_USER}}"

        with:
          string: ${{env.GITHUB_USER}}

      #       - name : set user
      #         id: user
      #         env:
      #           USER: ${{ format('vars.{0}',steps.string.outputs.uppercase) }}
      #         run: |
      #           echo "SLACK_USER= $USER" >> $GITHUB_ENV

      - name: GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: variable-mapper
        id: username
        uses: kanga333/variable-mapper@v0.3.0
        with:
          key: "${{github.base_ref}}"
          map: |
            {
              ".*" : {
              "HEMENDRASHARMA04" : "Hemendra"
              }
            }
          export_to: env,log,output

      #       - name: Action-Automerge
      #         if: Success()
      #         id: "automerge"
      #         uses: mtanzi/action-automerge@v1
      #         with:
      #           github_token: ${{ secrets.GITHUB_TOKEN }}
      #           pull_request_number: ${{ steps.pull.outputs.pull_request_number }}
      #           merge_method: "squash"
      #           commit_message: "Merge master into develop"
      #           source: "master"
      #           target: "develop"

      #       - name: setup python
      #         uses: actions/setup-python@v4.2.0
      #         with:
      #           python-version: 3.10.8

      - name: merge conflicts in PR
        #if: failure()
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#           USER: ${{github.event.commits[0].author.username}}
          USER: ${{ format('steps.username.outputs.{0}',steps.string.outputs.uppercase) }}
          USERNAME: "steps.username.outputs.$USER"
          TEST_USER: format("steps.username.outputs.{0}",$USER)
          TEST_SET: format("steps.username.outputs.{0}",$USER)
        run: |
          
          
          echo "action_state=$(eval ${{env.USER}} )" >> $GITHUB_ENV
          echo "test_version=$(echo $(${{env.USER}}))" >> $GITHUB_ENV
          echo ::set-output name=version::$test_version
          echo $test_version
          echo ${{env.test_version}}
          echo "${{env.test_version}}"
          echo $USER
          echo ${{steps.username.outputs.HEMENDRASHARMA04}}
         

      - name: Use the value
        id: step_two
        run: |
          echo "test_value=${{ env.action_state }}" >> $GITHUB_OUTPUT

      - name: Use the value again
        id: step_three
        run: |
          echo ${{steps.step_two.outputs.test_value}}

      - name: Find Slack user
        id: find-slack-user
        uses: scribd/find-slack-user-action@v1
        with:
          slack-token: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Print Slack user
        run: echo "${{ steps.find-slack-user.outputs.username }}"
#       - name: Set the value
#         id: step_one
#         run: |
#           echo "action_state=yellow" >> $GITHUB_ENV
#       - name: Use the value
#         id: step_two0
#         run: |
#           echo "${{ env.action_state }}"

#         uses: slackapi/slack-github-action@v1.23.0
#         with:
#           channel-id: "CG64UFLLW"
#           slack-message: "GitHub merge conflict test \n job:${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }} \n user : @${{env.USER}} }"
