name: Sync
on:
  push:
    branches:
      - master

jobs:
  # migrations_linter_job:
  #       runs-on: ubuntu-latest
  #       name: Alert for checking breaking migrations
  #       steps:
  #           - uses: actions/checkout@v3
  #             with:
  #                 fetch-depth: 0

  #           - name: Get changed files
  #             id: changed-files
  #             uses: tj-actions/changed-files@v31.0.0

  #           - name: setup python
  #             uses: actions/setup-python@v4.2.0
  #             with:
  #                 python-version: 3.10.8

  #           - name: Run migrations linter
  #             run: |
  #                 python migrations_linter.py ${{ steps.changed-files.outputs.all_changed_files }}

  sync-branches:
    # needs: migrations_linter_job
    runs-on: ubuntu-latest
    name: Syncing branches
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Opening pull request
        id: pull
        uses: tretuna/sync-branches@1.4.0
        with:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          CONTENT_COMPARISON: true
          FROM_BRANCH: "master"
          TO_BRANCH: "develop"
       
      - name: test uppercase
        id: string
        uses: ASzc/change-string-case-action@v5
        env:
          
          USER: ${{ format('SLACK_{0}',github.event.commits[0].author.username ) }}
          SLACK_USER: "${{env.USER}}"
          
        with:
          string: ${{env.USER}}
        
      - name : set user
        id: user
        env:
          USER: ${{ format('vars.{0}',steps.string.outputs.uppercase) }}
        run: |
          echo "SLACK_USER= $USER" >> $GITHUB_ENV
          
        
       
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
        
      - name: variable-mapper
        id: username
        uses: kanga333/variable-mapper@v0.3.0
        with:
          key: "${{github.base_ref}}"
          map: |
            {
              ".*" : {
              "HemendraSharma04" : "Hemendra"
              }
            }
          export_to: env,log,output
        
        
        

#       - name: Action-Automerge
#         if: Success()
#         id: "automerge"
#         uses: mtanzi/action-automerge@v1
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           pull_request_number: ${{ steps.pull.outputs.pull_request_number }}
#           merge_method: "squash"
#           commit_message: "Merge master into develop"
#           source: "master"
#           target: "develop"
      
      - name: setup python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: 3.10.8

      

      - name: merge conflicts in PR
        #if: failure()
        id: slack
        env:
          
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          USER: ${{github.event.commits[0].author.username}}
          USERNAME: "steps.username.outputs.$USER"
          
          TEST2 : "$USERNAME"
          
          
          
        run: | 
          
          echo "test"
          echo "FINAL_USER = ${{env.USERNAME}}" >> $GITHUB_ENV
          
          echo ${{env.TEST2}}
     
      - name: Use the value
        id: step_two
        run: |
          echo "${{ env.FINAL_USER }}"
          
          
#         uses: slackapi/slack-github-action@v1.23.0
#         with:
#           channel-id: "CG64UFLLW"
#           slack-message: "GitHub merge conflict test \n job:${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }} \n user : @${{env.USER}} }"
